"""–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –±–æ—Ç–∞."""

import datetime
import shlex

import pytz
import telebot
from telebot import types

from db_module import (user_create, user_exist,
                       user_get_action, user_set_action,
                       project_create, user_get_status,
                       user_set_status, check_date,
                       get_status_my_proj, review_add)

TOKEN = ''
NASTYA_ID = 466699718

default_timezone = pytz.timezone('Europe/Kaliningrad')
datetime.datetime.now(default_timezone)


buttons_name = {
    'price': '–ü—Ä–∞–π—Å ‚ù§Ô∏è',
    'works': '–†–∞–±–æ—Ç—ã üé•',
    'check_date': '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞—Ç—É üìÜ',
    'stage': '–°—Ç–∞–¥–∏—è –º–æ–Ω—Ç–∞–∂–∞ üîç',
    'order': '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìù',
    'review': '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üíå',
    'cancel': '–û—Ç–º–µ–Ω–∞',
    'send_order': '–ú–æ–ª—á–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å‚úÖ',
    'admin': '–ê–¥–º–∏–Ω–∫–∞ üì±',
    'add_proj': '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç üìó'
}

main_menu_user = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
main_menu_user.add(types.KeyboardButton(buttons_name['price']),
                   types.KeyboardButton(buttons_name['works']),
                   types.KeyboardButton(buttons_name['check_date']),
                   types.KeyboardButton(buttons_name['stage']),
                   types.KeyboardButton(buttons_name['order']),
                   types.KeyboardButton(buttons_name['review']),
                   )

main_menu_admin = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
main_menu_admin.add(types.KeyboardButton(buttons_name['price']),
                    types.KeyboardButton(buttons_name['works']),
                    types.KeyboardButton(buttons_name['check_date']),
                    types.KeyboardButton(buttons_name['stage']),
                    types.KeyboardButton(buttons_name['order']),
                    types.KeyboardButton(buttons_name['review']),
                    types.KeyboardButton(buttons_name['admin']),
                    )

cancel_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
cancel_menu.add(types.KeyboardButton(buttons_name['cancel']))

order_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
order_menu.add(types.KeyboardButton(buttons_name['send_order']))
order_menu.add(types.KeyboardButton(buttons_name['cancel']))

admin_menu = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
admin_menu.add(types.KeyboardButton(buttons_name['add_proj']))
admin_menu.add(types.KeyboardButton(buttons_name['cancel']))

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def user_register(message):
    """–î–æ–±–∞–≤–ª—è–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥."""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    date_joined = datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    last_interaction = date_joined
    user_data = (user_id, username, first_name,
                 last_name, date_joined, last_interaction)
    if not user_exist(user_id):
        user_create(user_data)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                     reply_markup=main_menu_user)


@bot.message_handler(content_types=['text'])
def message_handler(message):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞."""
    text = message.text
    print(text)
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∫—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω—É–∂–Ω–æ–≥–æ –º–µ–Ω—é
    if user_get_status(user_id) == 'admin':
        main_menu = main_menu_admin
    else:
        main_menu = main_menu_user
    
    # –ö–æ–º–∞–Ω–¥–∞ –ü—Ä–∞–π—Å
    if text == buttons_name['price']:
        bot.send_message(chat_id, '–ü—Ä–∞–π—Å –ù–∞—Å—Ç–µ–Ω—å–∫–∏ –µ—â–µ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω!',
                         reply_markup=main_menu)
        
    # –ö–æ–º–∞–Ω–¥–∞ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã
    elif text == buttons_name['works']:
        bot.send_message(chat_id, '–¢—É—Ç –ø–æ–∫–∞ –ø—É—Å—Ç–æ',
                         reply_markup=main_menu)
        
    # –ö–æ–º–∞–Ω–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω–∞ –ª–∏ –¥–∞—Ç–∞
    elif text == buttons_name['check_date']:
        msg = '''–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥.–º.–≥
–ü—Ä–∏–º–µ—Ä: 01.06.2024'''
        bot.send_message(chat_id, msg, reply_markup=cancel_menu)
        user_set_action(user_id, 'check_date')

    # –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif text == buttons_name['stage']:
        projects = get_status_my_proj(username)
        statuses = ''
        if projects:
            for project in projects:
                statuses += f'–ü—Ä–æ–µ–∫—Ç: {project[0]}\nC—Ç–∞—Ç—É—Å: {project[1]}\n\n'
            msg = f'–°–≤–æ–¥–∫–∞ –æ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö:\n\n{statuses}'
            bot.send_message(chat_id, msg, reply_markup=main_menu)
        else:
            msg = '–ó–∞ –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤'
            bot.send_message(chat_id, msg, reply_markup=main_menu)

    elif text == buttons_name['order']:
        msg = """–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–∏—á–Ω–æ –ù–∞—Å—Ç–µ–Ω—å–∫–µ
–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"""
        bot.send_message(chat_id, msg, reply_markup=order_menu)
        user_set_action(user_id, 'send_order')

    elif text == buttons_name['review']:
        bot.send_message(chat_id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤', reply_markup=cancel_menu)
        user_set_action(user_id, 'send_review')

    # –ö–æ–º–∞–Ω–¥–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª. –º–µ–Ω—é
    elif text == buttons_name['cancel']:
        bot.send_message(chat_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=main_menu)
        user_set_action(user_id, 'menu')

    # –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
    elif text == buttons_name['add_proj']:
        msg = """–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç
–®–∞–±–ª–æ–Ω: '–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞' –∑–∞–∫–∞–∑—á–∏–∫ —Ü–µ–Ω–∞ –¥–∞—Ç–∞ –≤—Ä–µ–º—è
–ü—Ä–∏–º–µ—Ä: 'BLACKPINK - TOMBOY' @sorotto 3500 01.06.2024 15:00-17:00 """
        bot.send_message(chat_id, msg, reply_markup=cancel_menu)
        user_set_action(user_id, 'add_project')

    # –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é
    elif text == buttons_name['admin']:
        bot.send_message(chat_id, '–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω–∫—É', reply_markup=admin_menu)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤–Ω–µ –∫–Ω–æ–ø–æ–∫
    else:
        action = user_get_action(user_id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        if action == 'add_project':
            try:
                parts = shlex.split(text)
                project_name = parts[0].strip("'")
                customer = parts[1]
                price = int(parts[2])
                date = parts[3]
                time_range = parts[4]
                data = (project_name, price, customer, date, time_range)
                project_create(data)
                user_set_action(user_id, 'menu')
                bot.send_message(chat_id, '–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup=main_menu)
            except ValueError:
                msg = """[–û—à–∏–±–∫–∞]: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!
–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞.
–ö–æ–≤—ã—á–µ–∫, –æ–±—Ä–∞–º–ª—è—é—â–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–æ–≤–Ω–æ –¥–≤–µ!"""
                bot.send_message(chat_id, msg, reply_markup=main_menu)
        elif action == 'check_date':
            try:
                dates = check_date(text)
                if dates:
                    times = ''
                    for date in dates:
                        times += f'{date[0]} \n'
                    msg = f'–ó–∞–Ω—è—Ç—ã–µ —á–∞—Å—ã –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å:\n{times}'
                    bot.send_message(chat_id, msg, reply_markup=main_menu)
                else:
                    msg = '–≠—Ç–æ—Ç –¥–µ–Ω—å —Å–≤–æ–±–æ–¥–µ–Ω, —è –≤—Å—è –≤–∞—à–∞üëåüèª'
                    bot.send_message(chat_id, msg, reply_markup=main_menu)
                user_set_action(user_id, 'menu')
            except ValueError:
                msg = '[–û—à–∏–±–∫–∞]: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–π –¥–∞—Ç—ã'
                bot.send_message(chat_id, msg, reply_markup=main_menu)

        elif action == 'send_order':
            msg_user = '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è :)'
            if text == buttons_name['send_order']:
                msg_nastya = f'–û–ø–∞—á–∫–∏, –∑–∞—è–≤–æ—á–∫–∞ –æ—Ç @{username}'
            else:
                msg_nastya = f'–û–ø–∞—á–∫–∏, –∑–∞—è–≤–æ—á–∫–∞ –æ—Ç @{username}\n\n{text}'
            bot.send_message(NASTYA_ID, msg_nastya)
            bot.send_message(chat_id, msg_user, reply_markup=main_menu)

        elif action == 'send_review':
            msg_user = '–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω‚ù§Ô∏è'
            msg_nastya = f'–û–ø–∞—á–∫–∏, —É —Ç–µ–±—è –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n\n{text}'
            send_date = datetime.datetime.now().strftime("%d.%m.%Y %H:%M:%S")
            data = (username, send_date, text)
            review_add(data)
            bot.send_message(chat_id, msg_user, reply_markup=main_menu)
            bot.send_message(NASTYA_ID, msg_nastya)


bot.polling(none_stop=True)
